syntax = "proto3";

package endpoint;

import "google/protobuf/empty.proto";

message EndpointId {
  string id = 1;
}

message Endpoint {
  EndpointId id = 1;
  string host_address = 2;
  string public_key = 3;
  EndpointStatus status = 4;
}

enum EndpointStatus {
  AWAITING_ACCEPTANCE = 0;
  FAILED = 2;
  OPERATIONAL = 3;
  FORBIDDEN = 4;
  UNREACHABLE = 5;
}

message Issuer {
  string public_key = 1;
  string url = 2;
  EndpointRole role = 3;
  string admin_name = 4;
  string admin_email = 5;
  string description = 6;
}

enum EndpointRole {
  BUILDER = 0;
  REPOSITORY_MANAGER = 1;
  HUB = 2;
}

message EnrollmentRequest {
  Issuer issuer = 1;
  string account_token = 2;
  EndpointRole role = 3;
}

message EndpointArray {
  repeated Endpoint endpoints = 1;
}

service EndpointService {
  rpc Enroll(EnrollmentRequest) returns (google.protobuf.Empty) {}
  rpc Accept(EnrollmentRequest) returns (google.protobuf.Empty) {}
  rpc Decline(google.protobuf.Empty) returns (google.protobuf.Empty) {}
  rpc Leave(google.protobuf.Empty) returns (google.protobuf.Empty) {}

  rpc Visible(google.protobuf.Empty) returns (EndpointArray) {}

  // Admin functions
  rpc Pending(google.protobuf.Empty) returns (EndpointArray) {}
  rpc AcceptPending(EndpointId) returns (google.protobuf.Empty) {}
  rpc DeclinePending(EndpointId) returns (google.protobuf.Empty) {}
}
