services:
  caddy:
    image: docker.io/caddy:2
    ports:
      - "5000:80"
    volumes:
      - vessel-state:/vessel
      - ./Caddyfile:/etc/caddy/Caddyfile
    networks:
      infra-test:
  summit:
    image: serpentos/summit:${RUST_PROFILE:-dev}
    volumes:
      - summit-state:/app/state
      - ./summit/.privkey:/app/state/.privkey
      - ./summit/config.toml:/app/config.toml
      - ./summit/seed.toml:/app/seed.toml
    ports:
      - "5001:5001"
    networks:
      infra-test:
    depends_on:
      tempo:
        condition: service_started
    healthcheck:
      test: curl --fail http://127.0.0.1:5000 || exit 1
      start_period: 30s
  vessel:
    image: serpentos/vessel:${RUST_PROFILE:-dev}
    volumes:
      - vessel-state:/app/state
      - ./vessel/.privkey:/app/state/.privkey
      - ./vessel/config.toml:/app/config.toml
      - ./import:/import
    depends_on:
      tempo:
        condition: service_started
      summit:
        condition: service_healthy
      caddy:
        condition: service_started
    networks:
      infra-test:
  avalanche:
    image: serpentos/avalanche:${RUST_PROFILE:-dev}
    privileged: true
    volumes:
      - avalanche-state:/app/state
      - ./avalanche/.privkey:/app/state/.privkey
      - ./avalanche/config.toml:/app/config.toml
    depends_on:
      tempo:
        condition: service_started
      summit:
        condition: service_healthy
    networks:
      infra-test:

  # Monitoring
  tempo:
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./tempo/tempo.yaml:/etc/tempo.yaml
    ports:
      - "3200:3200" # tempo
      - "4317:4317" # otlp grpc
    networks:
      infra-test:
  prometheus:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
      - --enable-feature=native-histograms
    volumes:
      - ./prometheus/prometheus.yaml:/etc/prometheus.yaml
    ports:
      - "9090:9090"
    depends_on:
      tempo:
        condition: service_started
    networks:
      infra-test:
  grafana:
    image: grafana/grafana:12.0.0
    volumes:
      - ./grafana/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor metricsSummary
      - GF_INSTALL_PLUGINS=https://storage.googleapis.com/integration-artifacts/grafana-exploretraces-app/grafana-exploretraces-app-latest.zip;grafana-traces-app
    ports:
      - "3000:3000"
    depends_on:
      prometheus:
        condition: service_started
    networks:
      infra-test:

volumes:
  summit-state:
  vessel-state:
  avalanche-state:

networks:
  infra-test:
    ipam:
      driver: default
