[workspace]
resolver = "2"
members = [
  "crates/*"
]

[workspace.package]
edition = "2024"
rust-version = "1.87"

[workspace.dependencies]
dag = { git = "https://github.com/AerynOS/os-tools.git" }
moss = { git = "https://github.com/AerynOS/os-tools.git" }
stone = { git = "https://github.com/AerynOS/os-tools.git" }
stone_recipe = { git = "https://github.com/AerynOS/os-tools.git" }

async-trait = "0.1.88"
axum = "0.8.0"
base64 = "0.22.1"
bitflags = "2.4.1"
bytes = "1.5"
camino = "1.1.9"
chrono = "0.4.30"
color-eyre = "0.6.2"
derive_more = { version = "2.0.1", features = ["display", "from", "into"] }
flate2 = "1.0"
futures-util = { version = "0.3.30", default-features = false }
hex = "0.4.3"
http = "1.0"
http-serde = "2.0"
include_dir = "0.7.4"
itertools = "0.14.0"
minijinja = "2.9.0"
minijinja-autoreload = "2.9.0"
natural-sort-rs = "0.2.1"
prost = "0.13.5"
prost-build = "0.13.5"
prost-reflect = "0.14.7"
prost-types = "0.13.5"
rand = "0.9.1"
serde_json = "1.0"
sha2 = "0.10.8"
snafu = "0.8.5"
thiserror = "2.0.3"
tokio-stream = "0.1.14"
tokio-util = "0.7"
toml = "0.8.8"
tonic = "0.13"
tonic-build = "0.13"
tracing = "0.1.40"
url = "2.5.2"

clap = { version = "4.4", features = ["derive"] }
ed25519-dalek = { version = "2.1.0", features = ["rand_core", "pkcs8", "pem"] }
jsonwebtoken = { version = "9.2.0", default-features = false }
reqwest = { version = "0.12.9", features = ["json"] }
serde = { version = "1.0", features = ["derive"] }
sqlx = { version = "=0.8.6", features = ["sqlite", "chrono", "uuid", "runtime-tokio"] }
strum = { version = "0.27.1", features = ["derive"] }
tokio = { version = "1.35.1", features = ["full"] }
tower = { version = "0.5.1", features = ["util"] }
tower-http = { version = "0.6.2", features = ["fs", "set-header"] }
tracing-futures = { version = "0.2.5", features = ["futures-03"] }
tracing-subscriber = { version = "0.3.18", features = ["env-filter", "json"] }
uuid = { version = "1.6.1", features = ["v4", "serde"] }

# This was recommended for static musl builds to work, but it doesn't on a f41 install...
# openssl = { version = "*", features = ["vendored"] }

[workspace.lints.rust]
rust_2018_idioms = { level = "warn", priority = -1 }
semicolon_in_expressions_from_macros = "warn"
unused_import_braces = "warn"
unused_qualifications = "warn"

[workspace.lints.clippy]
branches_sharing_code = "warn"
cloned_instead_of_copied = "warn"
disallowed_types = "warn"
empty_line_after_outer_attr = "warn"
inefficient_to_string = "warn"
macro_use_imports = "warn"
map_flatten = "warn"
missing_enforced_import_renames = "warn"
mut_mut = "warn"
nonstandard_macro_braces = "warn"
# fixing this requires sacrificing some ergonomics
result_large_err = "allow"
semicolon_if_nothing_returned = "warn"
str_to_string = "warn"
uninlined_format_args = "warn"
unreadable_literal = "warn"
wildcard_imports = "warn"

[profile.release]
lto = "thin"

# intended to (eventually) be used with fully static, drop-in deployment musl builds
[profile.packaging]
inherits = "release"
lto = true
codegen-units = 1
opt-level = 3
# allow packaging system to do it
strip = "none"
debug = true

# used for goldilocks zone build times vs. runtime perf
[profile.infratest]
inherits = "dev"
opt-level = 1

# Clean infratest dev-based profile build times on a 5950X system
#
# dev         : 0m34s = 100%
# -O1         : 1m18s = 229%
# -O2         : 1m29s = 261%
# -O1 thinlto : 1m37s = 285%
# -O2 thinlto : 1m48s = 317%
